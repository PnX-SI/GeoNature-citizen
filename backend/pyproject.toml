[tool.poetry]
name = "gncitizen-backend"
version = "1.0.0-dev"
description = "Citizen nature inventories (Backend"
authors = [
  "lpofredc",
  'QuentinJouet',
  'jolleon',
  'HamoudaHamine',
  'Naomi-Fischer',
  'camillemonchicourt',
  'hypsug0',
  'jbdesbas',
  'samuelpriou',
  'orovellotti',
  'ktalbi',
]
license = "AGPLv3"


[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
Flask = "^2.0.3"
Flask-Admin = "^1.6.0"
Flask-JWT-Extended = "^4.1.0"
flasgger = "^0.9.5"
psycopg2-binary = "^2.9.5"
Shapely = "^1.7.1"
SQLAlchemy = "^1.4.31"
toml = "^0.10.2"
gunicorn = "^20.1.0"
GeoAlchemy2 = ">=0.4.0,<0.12"
Flask-SQLAlchemy = "^2.5.1"
geojson = "^2.5.0"
coloredlogs = "^15.0.1"
passlib = "^1.7.4"
requests = "^2.28.1"
xlwt = "^1.3.0"
utils-flask-sqlalchemy-geo = "^0.2.5"
flask = "^2.2.2"
flask-admin = "^1.6.0"
flask-jwt-extended = "^4.4.4"
shapely = "^1.8.5.post1"
flask-ckeditor = "^0.4.6"
flask-cors = "^3.0.10"
flask-caching = "^2.0.1"
flask-migrate = "^4.0.0"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
isort = "^5.10.1"
flake8 = "^6.0.0"
autoflake = "^2.0.0"
pylint = "^2.17.4"
pylint-flask = "^0.6"
pylint-flask-sqlalchemy = "^0.2.0"


[tool.isort]
include_trailing_comma = true
line_length = 99
multi_line_output = 3
profile = "black"

[tool.black]
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''
include = '\.pyi?$'
line-length = 99
target-version = ['py38']

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 99
disable = """
    too-many-arguments,
    too-many-instance-attributes,
    too-few-public-methods
"""
good-names = ["i", "j", "k", "ex", "Run", "_", "db"]

[tool.pylint.MASTER]
load-plugins = ["pylint_flask_sqlalchemy", "pylint_flask"]

[tool.mypy]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
