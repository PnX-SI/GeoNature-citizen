version: '3.4'

services:
  frontend:
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - kane

  backend:
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5002/api/admin']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - kane

  db:
    image: postgis/postgis:14-master
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME:-dbname}
      - POSTGRES_USER=${DB_USER:-dbuser}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-dbpwd}
    volumes:
      - data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-dbuser} -d ${DB_NAME:-dbname} -h 127.0.0.1']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - kane

  nginx:
    depends_on:
      frontend:
        condition: service_healthy
    volumes:
      - ./config/backoffice_htpasswd:/etc/nginx/conf/.htpasswd
    networks:
      - kane

networks:
  kane:
    external: false
volumes:
  data:
