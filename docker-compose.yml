version: "3.4"

services:
  frontend:
    container_name: citizen-front
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONT_PORT-4000}/"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - citizen-kane

  backend:
    container_name: citizen-back
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT-5002}/api/admin"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - citizen-kane

  db:
    container_name: citizen-db
    image: postgis/postgis:14-master
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME-dbname}
      - POSTGRES_USER=${DB_USER-dbuser}
      - POSTGRES_PASSWORD=${DB_PASSWORD-dbpwd}
    volumes:
      - citizen_data:/var/lib/postgresql/data/pgdata
    healthcheck:      
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h 127.0.0.1"]     
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - citizen-kane

  nginx:
    container_name: citizen-nginx
    depends_on:
      frontend:
        condition: service_healthy
    volumes:
      - ./config/backoffice_htpasswd:/etc/nginx/conf/.htpasswd
    networks:
      - citizen-kane

networks:
  citizen-kane:
    external: false
volumes:
  citizen_data:
